{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","getUserById","usersFromServer","find","todosWithUser","todosFromServer","titlePatter","App","useState","setTodos","setTitle","isTitleValid","setIsTitleValid","setUser","isUserValid","setIsUserValid","handleSubmit","event","preventDefault","abortSubmit","newTodo","Math","max","action","method","onSubmit","htmlFor","type","value","onChange","normalizedTitle","replace","handleTitleOnChange","currentTarget","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.711a5798.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../services/types';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../services/types';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../services/types';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nimport { Todo } from './services/types';\n\nfunction getUserById(id: number) {\n  return usersFromServer.find(user => user.id === id);\n}\n\nconst todosWithUser = (): Todo[] => {\n  return todosFromServer.map(todo => {\n    return {\n      ...todo,\n      user: getUserById(todo.id),\n    };\n  });\n};\n\nconst titlePatter = /[^a-zа-щьюяґєії\\d\\s]/gi;\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosWithUser);\n\n  const [title, setTitle] = useState('');\n  const [isTitleValid, setIsTitleValid] = useState(true);\n\n  const [user, setUser] = useState(0);\n  const [isUserValid, setIsUserValid] = useState(true);\n\n  const completed = false;\n\n  const reset = () => {\n    setTitle('');\n    setUser(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    let abortSubmit = false;\n\n    if (!title) {\n      setIsTitleValid(false);\n      abortSubmit = true;\n    }\n\n    if (!user) {\n      setIsUserValid(false);\n      abortSubmit = true;\n    }\n\n    if (abortSubmit) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title,\n      completed,\n      userId: user,\n      user: getUserById(user),\n    };\n\n    setTodos([...todos, newTodo]);\n    reset();\n  };\n\n  const handleTitleOnChange = (value: string) => {\n    const normalizedTitle = value.replace(titlePatter, '');\n\n    setTitle(normalizedTitle);\n    setIsTitleValid(true);\n  };\n\n  const handleUserOnChange = (value: number) => {\n    setUser(value);\n    setIsUserValid(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={event => handleSubmit(event)}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            name=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={event => handleTitleOnChange(event.currentTarget.value)}\n            placeholder=\"Enter a title\"\n          />\n          {!isTitleValid && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            name=\"user\"\n            data-cy=\"userSelect\"\n            onChange={event => handleUserOnChange(+event.currentTarget.value)}\n            value={user}\n          >\n            <option value=\"0\">Choose a user</option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option value={id} key={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {!isUserValid && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}